@page "/register"
@using ImageAnnotationToolDataAccessLibrary.Models.TeamManagement;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.EntityFrameworkCore;

<PageTitle>Rejestracja</PageTitle>
<h3>Rejestracja</h3>

<EditForm Model="@signUpFormData">
	<DataAnnotationsValidator />
	<InputText 
		type="text" 
		placeholder="Login" 
		@bind-Value="@signUpFormData.Login" />
	<ValidationSummary />
</EditForm>

<EditForm Model="@signUpFormData">
	<DataAnnotationsValidator />
	<InputText 
		type="email" 
		placeholder="Email" 
		@bind-Value="@signUpFormData.Email" />
	<ValidationSummary />
</EditForm>

<EditForm Model="@signUpFormData">
	<DataAnnotationsValidator />
	<InputText 
		type="password" 
		placeholder="Hasło" 
		@bind-Value="@signUpFormData.Password" 
		/>
	<ValidationSummary />
</EditForm>

<EditForm Model="@signUpFormData">
	<DataAnnotationsValidator />
	<InputText type="password"
			   placeholder="Potwierdź hasło"
			   @bind-Value="@signUpFormData.ConfirmPassword"
			   />
	<ValidationSummary />
</EditForm>

<br/>

<button
	type="submit"
	class="btn btn-success form-"
	@onclick="@AddNewAccount">
		
	Zarejestruj
</button>


@code {
	private class SignUpFormData
	{
		[Required(ErrorMessage = "Pole wymagane")]

		public string Login { get; set; }

		[Required(ErrorMessage = "Pole wymagane")]
		[EmailAddress(ErrorMessage = "Błędny adres email")]

		public string Email { get; set; }

		private const int MINIMUM_PASSWORD_LENGTH = 8;

		[Required(ErrorMessage = "Pole wymagane")]
		[StringLength(
			int.MaxValue, 
			MinimumLength = MINIMUM_PASSWORD_LENGTH, 
			ErrorMessage = "Hasło musi składać się z conajmniej 8 znaków")]

		public string Password 
		{ 
			get => password;
			set
			{ 
				password = value; 
				ConfirmPassword = string.Empty; 
			} 
		}

		[Required(ErrorMessage = "Pole wymagane")]
		[Compare(nameof(Password), ErrorMessage = "Hasła muszą być jednakowe")]

		public string ConfirmPassword { get; set; }

		private string password;
	}

	private SignUpFormData signUpFormData = new();

	private async Task AddNewAccount()
	{
		var account = new UserAccount
		{
			Login = signUpFormData.Login,
			Email = signUpFormData.Email,
			Password = signUpFormData.Password
		};
	}
}
