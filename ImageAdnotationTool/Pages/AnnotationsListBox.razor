@using ImageAnnotationToolDataAccessLibrary.Models.ImageAnnotation;

<div>
    
    @foreach(var item in List)
    {
        <div class="square" @onclick=@(() => OnSelectAnnotation?.Invoke(item))>
            <ComboBox
                Items="@Classes"
                InitialSelection="@item.Class"
                OnSelectedItemChanged="@(x => {
                        item.Class = x;
                        StateHasChanged();
                    })"
                CustomSelectionEqualityCheck="@((a, b) => a.Id == b.Id)"
                CustomStringConverter="@(new ComboBox<AnnotationClass>
                    .DelegatedCustomStringConverter(x => x.Name))"
                />
            @*<DescriptorsListBox 
                Blueprints="@(item.Class?.DescriptorBlueprints?.ToList())"/>*@
            
        </div>
    }
    <br/>
    <button @onclick="@AddElement">Dodaj nowy...</button>
    <br/>
</div>

@code {
    [Parameter, EditorRequired]
    public List<AnnotationClass> Classes { get; set; } = null!;

    [Parameter]
    public List<Annotation> List { get; set; } = new();

    [Parameter]
    public Action<Annotation> OnAddAnnotation { get; set; }

    [Parameter]
    public Action<Annotation> OnSelectAnnotation { get; set; }

    
    private void AddElement()
    {
        var annotation = new Annotation()
        {
            Class = Classes[0]
        };
        List.Add(annotation);
        OnAddAnnotation?.Invoke(annotation);
        StateHasChanged();
    }
}
